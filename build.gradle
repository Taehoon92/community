plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'war'

	//QueryDSL 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

}

bootWar {
	archiveBaseName = "community"
	archiveFileName = "community.war"
	archiveVersion = "0.0.0"
}

group = 'hoon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	//swagger
	// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	//QueryDSL 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'

	//OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'


    compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testRuntimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	annotationProcessor 'org.projectlombok:lombok'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
//	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

compileQuerydsl.doFirst {
	if(file(querydslDir).exists())
		delete(file(querydslDir))
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
//	querydsl.extendsFrom implementation, compileClasspath
}

